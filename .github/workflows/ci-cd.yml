name: CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-push:
    name: Build & Push Docker Images
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [backend, frontend]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & push ${{ matrix.service }} image
        uses: docker/build-push-action@v5
        with:
          context: ./${{ matrix.service }}
          file: ./${{ matrix.service }}/Dockerfile
          push: true
          tags: |
            carluka/task-flow-${{ matrix.service }}:latest
            carluka/task-flow-${{ matrix.service }}:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  notify-server:
    name: Notify Azure VM
    needs: build-and-push
    runs-on: ubuntu-latest
    if: needs.build-and-push.result == 'success' && github.ref == 'refs/heads/main'
    steps:
      - name: Send deployment webhook
        uses: joelwmale/webhook-action@master
        with:
          url: ${{ secrets.WEBHOOK_URL }}
          headers: |
            {
              "Content-Type": "application/json",
              "X-Webhook-Token": "${{ secrets.WEBHOOK_SECRET }}",
              "User-Agent": "GitHub-Actions"
            }
          body: |
            {
              "repository": "${{ github.repository }}",
              "services": ["frontend", "backend"],
              "tag": "latest",
              "commit": "${{ github.sha }}",
              "ref": "${{ github.ref }}",
              "pusher": "${{ github.actor }}",
              "timestamp": "${{ github.event.head_commit.timestamp }}"
            }
